version: 2.1
description: "Job for finding and sending feature flag code references to LaunchDarkly. Code references documentation: https://docs.launchdarkly.com/v2.0/docs/git-code-references"
display:
  home_url: https://docs.launchdarkly.com
  source_url: https://github.com/launchdarkly/ld-find-code-refs/tree/main/build/package/circleci
examples:
  minimal_config:
    description: Minimal configuration
    usage:
      version: 2.1
      orbs:
        launchdarkly: launchdarkly/ld-find-code-refs@2.5.7
      workflows:
        main:
          jobs:
            - launchdarkly/find-code-references:
                access_token: "${LD_ACCESS_TOKEN}"
                proj_key: 'YOUR_LAUNCHDARKLY_PROJECT_KEY'
                debug: true

  context_lines:
    description: "Configuration with context lines provided. Context line documentation: https://docs.launchdarkly.com/v2.0/docs/git-code-references#section-adding-context-lines"
    usage:
      version: 2.1
      orbs:
        launchdarkly: launchdarkly/ld-find-code-refs@2.5.7
      workflows:
        main:
          jobs:
            - launchdarkly/find-code-references:
                debug: true
                access_token: "${LD_ACCESS_TOKEN}"
                proj_key: 'YOUR_LAUNCHDARKLY_PROJECT_KEY'
                context_lines: 3

  standard_configuration:
    description: "A configuration with the the `repoType` set to GitHub, and the `repuUrl` set to a GitHub URL. We recommend configuring these parameters so LaunchDarkly is able to generate reference links to your source code"
    usage:
      version: 2.1
      orbs:
        launchdarkly: launchdarkly/ld-find-code-refs@2.5.7
      workflows:
        main:
          jobs:
            - launchdarkly/find-code-references:
                debug: true
                access_token: "${LD_ACCESS_TOKEN}"
                proj_key: 'YOUR_LAUNCHDARKLY_PROJECT_KEY'
                repo_type: 'github'
                repo_url: 'YOUR_REPO_URL'
                context_lines: 3

jobs:
  find-code-references:
    description: Scans a git repository for code references.
    parameters:
      access_token:
        description: LaunchDarkly access token (use env var $LD_ACCESS_TOKEN to populate).
        type: string
        default: "${LD_ACCESS_TOKEN}"
      proj_key:
        description: LaunchDarkly project key. Found under Account Settings -> Projects in the LaunchDarkly dashboard. Cannot be combined with `projects` block in configuration file.
        type: string
      base_uri:
        description: Set the base URL of the LaunchDarkly server for this configuration. Only necessary if using a private instance of LaunchDarkly.
        type: string
        default: "https://app.launchdarkly.com"
      context_lines:
        description: The number of context lines above and below a code reference for the job to send to LaunchDarkly. By default, the flag finder will not send any context lines to LaunchDarkly. If < 0, no source code will be sent to LaunchDarkly. If 0, only the lines containing flag references will be sent. If > 0, will send that number of context lines above and below the flag reference. A maximum of 5 context lines may be provided.
        type: integer
        default: 2
      repo_type:
        description: "The repo service provider. Used to correctly categorize repositories in the LaunchDarkly UI."
        type: enum
        default: custom
        enum: ["github", "bitbucket", "custom"]
      repo_url:
        description:  "The display url for the repository. If provided for a github or bitbucket repository, LaunchDarkly will attempt to automatically generate source code links. Example: `https://github.com/launchdarkly/ld-find-code-refs`"
        type: string
        default: ""
      default_branch:
        description: "The git default branch. The LaunchDarkly UI will default to display code references for this branch."
        type: string
        default: "main"
      commit_url_template:
        description: "If provided, LaunchDarkly will attempt to generate links to your Git service provider per commit. Example: `https://github.com/launchdarkly/ld-find-code-refs/commit/${sha}`. Allowed template variables: `branchName`, `sha`. If `commitUrlTemplate` is not provided, but `repoUrl` is provided, LaunchDarkly will automatically generate links for github or bitbucket repo types."
        type: string
        default: ""
      hunk_url_template:
        description: "If provided, LaunchDarkly will attempt to generate links to your Git service provider per code reference. Example: `https://github.com/launchdarkly/ld-find-code-refs/blob/${sha}/${filePath}#L${lineNumber}`. Allowed template variables: `sha`, `filePath`, `lineNumber`. If `hunkUrlTemplate` is not provided, but `repoUrl` is provided, LaunchDarkly will automatically generate links for github or bitbucket repo types."
        type: string
        default: ""
      allow_tags:
        description: "Enables storing references for tags. The tag will be listed as a branch."
        type: boolean
        default: false
      debug:
        description: "Enables verbose debug logging."
        type: boolean
        default: false
      ignore_service_errors:
        description: "If enabled, the scanner will terminate with exit code 0 when the LaunchDarkly API is unreachable or returns an unexpected response."
        type: boolean
        default: false
      lookback:
        description: "Sets the number of Git commits to search in history for
whether a feature flag was removed from code. May be set to 0 to disabled this feature. Setting this option to a high value will increase search time."
        type: integer
        default: 10
    docker:
      - image: launchdarkly/ld-find-code-refs:2.5.7
        entrypoint: sh
    steps:
      - checkout:
          path: /repo
      - run:
          name: Find flag references
          command: |
            ld-find-code-refs \
              --debug=<< parameters.debug >> \
              --accessToken=<< parameters.access_token >> \
              --projKey=<< parameters.proj_key >> \
              --ignoreServiceErrors=<< parameters.ignore_service_errors >> \
              --lookback=<< parameters.lookback >> \
              --contextLines=<< parameters.context_lines >> \
              --baseUri=<< parameters.base_uri >> \
              --repoType=<< parameters.repo_type >> \
              --repoUrl=<< parameters.repo_url >> \
              --defaultBranch=<< parameters.default_branch >> \
              --allowTags=<< parameters.allow_tags >> \
              --commitUrlTemplate=<< parameters.commit_url_template >> \
              --hunkUrlTemplate=<< parameters.hunk_url_template >> \
              --repoName=${CIRCLE_PROJECT_REPONAME} \
              --updateSequenceId=${CIRCLE_BUILD_NUM} \
              --dir=/repo
