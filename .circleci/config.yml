version: 2

experimental:
  notify:
    branches:
      only:
        - master

defaults:
  environment: &environment
    CIRCLE_TEST_REPORTS: /tmp/circle-reports
    CIRCLE_ARTIFACTS: /tmp/circle-artifacts
    COMMON_GO_PACKAGES: >
      github.com/jstemmer/go-junit-report
      github.com/kyoh86/richgo

  build_steps: &build_steps
    steps:
      - checkout
      - run:
          name: install pre dependencies
          command: |
            sudo apt-get install -yqq git
      - run: go get -u $COMMON_GO_PACKAGES
      - run: sudo apt-get update
      - run: sudo apt-get install python3-pip
      - run: sudo pip install pre-commit
      - run: pre-commit install
      - run: SKIP=go-unit-tests pre-commit run -a
      - run:
          name: Set up Code Climate test-reporter
          command: |
            curl -sS -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            mkdir -p $CIRCLE_TEST_REPORTS
            mkdir -p $CIRCLE_ARTIFACTS
            trap "go-junit-report < $CIRCLE_ARTIFACTS/report.txt > $CIRCLE_TEST_REPORTS/junit.xml" EXIT
            if [ -z "$DISABLE_COVERAGE" ]; then
              go_cover_args="-covermode=atomic -coverpkg=./... -coverprofile /tmp/circle-artifacts/coverage.txt"
            fi
            go test -race $go_cover_args -v $(go list ./... | grep -v /vendor/) | tee >(richgo testfilter) > $CIRCLE_ARTIFACTS/report.txt
            if [[ -z "$DISABLE_COVERAGE" && -n "$CC_TEST_REPORTER_ID" ]]; then
              ./cc-test-reporter format-coverage $CIRCLE_ARTIFACTS/coverage.txt -t gocov --output $CIRCLE_ARTIFACTS/coverage.json
              ./cc-test-reporter upload-coverage --input $CIRCLE_ARTIFACTS/coverage.json
            fi
      - run:
          name: Generate coverage report
          command: |
            if [ -z "$DISABLE_COVERAGE" ]; then
              go tool cover -html=$CIRCLE_ARTIFACTS/coverage.txt -o $CIRCLE_ARTIFACTS/coverage.html
            fi
          when: always
      - store_test_results:
          path: /tmp/circle-reports
      - store_artifacts:
          path: /tmp/circle-artifacts

jobs:
  go-test:
    docker:
      - image: cimg/go:1.17.1
        environment:
          <<: *environment

    <<: *build_steps

  test-publish:
    docker:
      - image: cimg/go:1.17.1
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update
      - run: sudo apt-get install rpm
      - run: curl -sL https://git.io/goreleaser | VERSION=v0.169.0 bash -s -- --rm-dist --skip-publish --skip-validate --release-notes <(make echo-release-notes)

workflows:
  version: 2
  test:
    jobs:
      - go-test:
          filters:
            tags:
              only: /.*/
      - test-publish:
          requires:
            - go-test
